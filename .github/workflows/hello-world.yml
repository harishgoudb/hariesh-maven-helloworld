name: Maven Hello-World
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - uses: jfrog/setup-jfrog-cli@v1
      env:
        JF_ARTIFACTORY_1: ${{ secrets.HARISH_CLI_GITHUB_ACTIONS }}
    - run: |
        # Ping the server
        jfrog rt ping
    - uses: jfrog/setup-jfrog-cli@v1.2.0
      env:
        JF_ARTIFACTORY_1: ${{ secrets.HARISH_CLI_GITHUB_ACTIONS }}
        M2_HOME: /usr/share/apache-maven-3.8.1
        buildInfo.env.publisher.publishArtifacts: true
        buildInfo.env.publisher.publishBuildInfo: true
    - run: |
        jfrog rt mvnc --global --server-id-resolve=Artifactory --server-id-deploy=Artifactory --repo-resolve-releases=libs-release --repo-resolve-snapshots=libs-snapshot --repo-deploy-releases=libs-release-local --repo-deploy-snapshots=libs-snapshot-local
      env:
        M2_HOME: /usr/share/apache-maven-3.8.1
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-jfrog-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-jfrog-
    - name: Build with Maven
      # skip tests because they are connecting to data sources
      run: |
        jfrog rt mvn -Dmaven.test.skip.exec -B install
        jfrog rt bp
      env:
        M2_HOME: /usr/share/apache-maven-3.8.1
        buildInfo.env.publisher.publishArtifacts: true
        buildInfo.env.publisher.publishBuildInfo: true
